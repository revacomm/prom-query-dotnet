// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Prometheus {

  /// <summary>Holder for reflection information generated from types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt0eXBlcy5wcm90bxIKcHJvbWV0aGV1cxoUZ29nb3Byb3RvL2dvZ28ucHJv",
            "dG8i+AEKDk1ldHJpY01ldGFkYXRhEjMKBHR5cGUYASABKA4yJS5wcm9tZXRo",
            "ZXVzLk1ldHJpY01ldGFkYXRhLk1ldHJpY1R5cGUSGgoSbWV0cmljX2ZhbWls",
            "eV9uYW1lGAIgASgJEgwKBGhlbHAYBCABKAkSDAoEdW5pdBgFIAEoCSJ5CgpN",
            "ZXRyaWNUeXBlEgsKB1VOS05PV04QABILCgdDT1VOVEVSEAESCQoFR0FVR0UQ",
            "AhINCglISVNUT0dSQU0QAxISCg5HQVVHRUhJU1RPR1JBTRAEEgsKB1NVTU1B",
            "UlkQBRIICgRJTkZPEAYSDAoIU1RBVEVTRVQQByIqCgZTYW1wbGUSDQoFdmFs",
            "dWUYASABKAESEQoJdGltZXN0YW1wGAIgASgDIlUKCEV4ZW1wbGFyEicKBmxh",
            "YmVscxgBIAMoCzIRLnByb21ldGhldXMuTGFiZWxCBMjeHwASDQoFdmFsdWUY",
            "AiABKAESEQoJdGltZXN0YW1wGAMgASgDIocECglIaXN0b2dyYW0SEwoJY291",
            "bnRfaW50GAEgASgESAASFQoLY291bnRfZmxvYXQYAiABKAFIABILCgNzdW0Y",
            "AyABKAESDgoGc2NoZW1hGAQgASgREhYKDnplcm9fdGhyZXNob2xkGAUgASgB",
            "EhgKDnplcm9fY291bnRfaW50GAYgASgESAESGgoQemVyb19jb3VudF9mbG9h",
            "dBgHIAEoAUgBEjQKDm5lZ2F0aXZlX3NwYW5zGAggAygLMhYucHJvbWV0aGV1",
            "cy5CdWNrZXRTcGFuQgTI3h8AEhcKD25lZ2F0aXZlX2RlbHRhcxgJIAMoEhIX",
            "Cg9uZWdhdGl2ZV9jb3VudHMYCiADKAESNAoOcG9zaXRpdmVfc3BhbnMYCyAD",
            "KAsyFi5wcm9tZXRoZXVzLkJ1Y2tldFNwYW5CBMjeHwASFwoPcG9zaXRpdmVf",
            "ZGVsdGFzGAwgAygSEhcKD3Bvc2l0aXZlX2NvdW50cxgNIAMoARIzCgpyZXNl",
            "dF9oaW50GA4gASgOMh8ucHJvbWV0aGV1cy5IaXN0b2dyYW0uUmVzZXRIaW50",
            "EhEKCXRpbWVzdGFtcBgPIAEoAyI0CglSZXNldEhpbnQSCwoHVU5LTk9XThAA",
            "EgcKA1lFUxABEgYKAk5PEAISCQoFR0FVR0UQA0IHCgVjb3VudEIMCgp6ZXJv",
            "X2NvdW50IiwKCkJ1Y2tldFNwYW4SDgoGb2Zmc2V0GAEgASgREg4KBmxlbmd0",
            "aBgCIAEoDSLAAQoKVGltZVNlcmllcxInCgZsYWJlbHMYASADKAsyES5wcm9t",
            "ZXRoZXVzLkxhYmVsQgTI3h8AEikKB3NhbXBsZXMYAiADKAsyEi5wcm9tZXRo",
            "ZXVzLlNhbXBsZUIEyN4fABItCglleGVtcGxhcnMYAyADKAsyFC5wcm9tZXRo",
            "ZXVzLkV4ZW1wbGFyQgTI3h8AEi8KCmhpc3RvZ3JhbXMYBCADKAsyFS5wcm9t",
            "ZXRoZXVzLkhpc3RvZ3JhbUIEyN4fACIkCgVMYWJlbBIMCgRuYW1lGAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgJIjEKBkxhYmVscxInCgZsYWJlbHMYASADKAsyES5w",
            "cm9tZXRoZXVzLkxhYmVsQgTI3h8AIoIBCgxMYWJlbE1hdGNoZXISKwoEdHlw",
            "ZRgBIAEoDjIdLnByb21ldGhldXMuTGFiZWxNYXRjaGVyLlR5cGUSDAoEbmFt",
            "ZRgCIAEoCRINCgV2YWx1ZRgDIAEoCSIoCgRUeXBlEgYKAkVREAASBwoDTkVR",
            "EAESBgoCUkUQAhIHCgNOUkUQAyJ8CglSZWFkSGludHMSDwoHc3RlcF9tcxgB",
            "IAEoAxIMCgRmdW5jGAIgASgJEhAKCHN0YXJ0X21zGAMgASgDEg4KBmVuZF9t",
            "cxgEIAEoAxIQCghncm91cGluZxgFIAMoCRIKCgJieRgGIAEoCBIQCghyYW5n",
            "ZV9tcxgHIAEoAyKvAQoFQ2h1bmsSEwoLbWluX3RpbWVfbXMYASABKAMSEwoL",
            "bWF4X3RpbWVfbXMYAiABKAMSKAoEdHlwZRgDIAEoDjIaLnByb21ldGhldXMu",
            "Q2h1bmsuRW5jb2RpbmcSDAoEZGF0YRgEIAEoDCJECghFbmNvZGluZxILCgdV",
            "TktOT1dOEAASBwoDWE9SEAESDQoJSElTVE9HUkFNEAISEwoPRkxPQVRfSElT",
            "VE9HUkFNEAMiYQoNQ2h1bmtlZFNlcmllcxInCgZsYWJlbHMYASADKAsyES5w",
            "cm9tZXRoZXVzLkxhYmVsQgTI3h8AEicKBmNodW5rcxgCIAMoCzIRLnByb21l",
            "dGhldXMuQ2h1bmtCBMjeHwBCCFoGcHJvbXBiYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.MetricMetadata), global::Prometheus.MetricMetadata.Parser, new[]{ "Type", "MetricFamilyName", "Help", "Unit" }, null, new[]{ typeof(global::Prometheus.MetricMetadata.Types.MetricType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.Sample), global::Prometheus.Sample.Parser, new[]{ "Value", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.Exemplar), global::Prometheus.Exemplar.Parser, new[]{ "Labels", "Value", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.Histogram), global::Prometheus.Histogram.Parser, new[]{ "CountInt", "CountFloat", "Sum", "Schema", "ZeroThreshold", "ZeroCountInt", "ZeroCountFloat", "NegativeSpans", "NegativeDeltas", "NegativeCounts", "PositiveSpans", "PositiveDeltas", "PositiveCounts", "ResetHint", "Timestamp" }, new[]{ "Count", "ZeroCount" }, new[]{ typeof(global::Prometheus.Histogram.Types.ResetHint) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.BucketSpan), global::Prometheus.BucketSpan.Parser, new[]{ "Offset", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.TimeSeries), global::Prometheus.TimeSeries.Parser, new[]{ "Labels", "Samples", "Exemplars", "Histograms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.Label), global::Prometheus.Label.Parser, new[]{ "Name", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.Labels), global::Prometheus.Labels.Parser, new[]{ "Labels_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.LabelMatcher), global::Prometheus.LabelMatcher.Parser, new[]{ "Type", "Name", "Value" }, null, new[]{ typeof(global::Prometheus.LabelMatcher.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.ReadHints), global::Prometheus.ReadHints.Parser, new[]{ "StepMs", "Func", "StartMs", "EndMs", "Grouping", "By", "RangeMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.Chunk), global::Prometheus.Chunk.Parser, new[]{ "MinTimeMs", "MaxTimeMs", "Type", "Data" }, null, new[]{ typeof(global::Prometheus.Chunk.Types.Encoding) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Prometheus.ChunkedSeries), global::Prometheus.ChunkedSeries.Parser, new[]{ "Labels", "Chunks" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MetricMetadata : pb::IMessage<MetricMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricMetadata> _parser = new pb::MessageParser<MetricMetadata>(() => new MetricMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MetricMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricMetadata(MetricMetadata other) : this() {
      type_ = other.type_;
      metricFamilyName_ = other.metricFamilyName_;
      help_ = other.help_;
      unit_ = other.unit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricMetadata Clone() {
      return new MetricMetadata(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Prometheus.MetricMetadata.Types.MetricType type_ = global::Prometheus.MetricMetadata.Types.MetricType.Unknown;
    /// <summary>
    /// Represents the metric type, these match the set from Prometheus.
    /// Refer to model/textparse/interface.go for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Prometheus.MetricMetadata.Types.MetricType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "metric_family_name" field.</summary>
    public const int MetricFamilyNameFieldNumber = 2;
    private string metricFamilyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MetricFamilyName {
      get { return metricFamilyName_; }
      set {
        metricFamilyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "help" field.</summary>
    public const int HelpFieldNumber = 4;
    private string help_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Help {
      get { return help_; }
      set {
        help_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 5;
    private string unit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Unit {
      get { return unit_; }
      set {
        unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MetricMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MetricMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (MetricFamilyName != other.MetricFamilyName) return false;
      if (Help != other.Help) return false;
      if (Unit != other.Unit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Prometheus.MetricMetadata.Types.MetricType.Unknown) hash ^= Type.GetHashCode();
      if (MetricFamilyName.Length != 0) hash ^= MetricFamilyName.GetHashCode();
      if (Help.Length != 0) hash ^= Help.GetHashCode();
      if (Unit.Length != 0) hash ^= Unit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Prometheus.MetricMetadata.Types.MetricType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MetricFamilyName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MetricFamilyName);
      }
      if (Help.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Help);
      }
      if (Unit.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Prometheus.MetricMetadata.Types.MetricType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MetricFamilyName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MetricFamilyName);
      }
      if (Help.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Help);
      }
      if (Unit.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Prometheus.MetricMetadata.Types.MetricType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MetricFamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetricFamilyName);
      }
      if (Help.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Help);
      }
      if (Unit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MetricMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Prometheus.MetricMetadata.Types.MetricType.Unknown) {
        Type = other.Type;
      }
      if (other.MetricFamilyName.Length != 0) {
        MetricFamilyName = other.MetricFamilyName;
      }
      if (other.Help.Length != 0) {
        Help = other.Help;
      }
      if (other.Unit.Length != 0) {
        Unit = other.Unit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Prometheus.MetricMetadata.Types.MetricType) input.ReadEnum();
            break;
          }
          case 18: {
            MetricFamilyName = input.ReadString();
            break;
          }
          case 34: {
            Help = input.ReadString();
            break;
          }
          case 42: {
            Unit = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Prometheus.MetricMetadata.Types.MetricType) input.ReadEnum();
            break;
          }
          case 18: {
            MetricFamilyName = input.ReadString();
            break;
          }
          case 34: {
            Help = input.ReadString();
            break;
          }
          case 42: {
            Unit = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MetricMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum MetricType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("COUNTER")] Counter = 1,
        [pbr::OriginalName("GAUGE")] Gauge = 2,
        [pbr::OriginalName("HISTOGRAM")] Histogram = 3,
        [pbr::OriginalName("GAUGEHISTOGRAM")] Gaugehistogram = 4,
        [pbr::OriginalName("SUMMARY")] Summary = 5,
        [pbr::OriginalName("INFO")] Info = 6,
        [pbr::OriginalName("STATESET")] Stateset = 7,
      }

    }
    #endregion

  }

  public sealed partial class Sample : pb::IMessage<Sample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sample> _parser = new pb::MessageParser<Sample>(() => new Sample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Sample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sample(Sample other) : this() {
      value_ = other.value_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sample Clone() {
      return new Sample(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    /// <summary>
    /// timestamp is in ms format, see model/timestamp/timestamp.go for
    /// conversion from time.Time to Prometheus timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Sample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Sample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Sample other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Exemplar : pb::IMessage<Exemplar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Exemplar> _parser = new pb::MessageParser<Exemplar>(() => new Exemplar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Exemplar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Exemplar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Exemplar(Exemplar other) : this() {
      labels_ = other.labels_.Clone();
      value_ = other.value_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Exemplar Clone() {
      return new Exemplar(this);
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Prometheus.Label> _repeated_labels_codec
        = pb::FieldCodec.ForMessage(10, global::Prometheus.Label.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Label> labels_ = new pbc::RepeatedField<global::Prometheus.Label>();
    /// <summary>
    /// Optional, can be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Label> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    /// <summary>
    /// timestamp is in ms format, see model/timestamp/timestamp.go for
    /// conversion from time.Time to Prometheus timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Exemplar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Exemplar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!labels_.Equals(other.labels_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= labels_.GetHashCode();
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      labels_.WriteTo(output, _repeated_labels_codec);
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      labels_.WriteTo(ref output, _repeated_labels_codec);
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += labels_.CalculateSize(_repeated_labels_codec);
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Exemplar other) {
      if (other == null) {
        return;
      }
      labels_.Add(other.labels_);
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A native histogram, also known as a sparse histogram.
  /// Original design doc:
  /// https://docs.google.com/document/d/1cLNv3aufPZb3fNfaJgdaRBZsInZKKIHo9E6HinJVbpM/edit
  /// The appendix of this design doc also explains the concept of float
  /// histograms. This Histogram message can represent both, the usual
  /// integer histogram as well as a float histogram.
  /// </summary>
  public sealed partial class Histogram : pb::IMessage<Histogram>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Histogram> _parser = new pb::MessageParser<Histogram>(() => new Histogram());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Histogram> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Histogram() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Histogram(Histogram other) : this() {
      sum_ = other.sum_;
      schema_ = other.schema_;
      zeroThreshold_ = other.zeroThreshold_;
      negativeSpans_ = other.negativeSpans_.Clone();
      negativeDeltas_ = other.negativeDeltas_.Clone();
      negativeCounts_ = other.negativeCounts_.Clone();
      positiveSpans_ = other.positiveSpans_.Clone();
      positiveDeltas_ = other.positiveDeltas_.Clone();
      positiveCounts_ = other.positiveCounts_.Clone();
      resetHint_ = other.resetHint_;
      timestamp_ = other.timestamp_;
      switch (other.CountCase) {
        case CountOneofCase.CountInt:
          CountInt = other.CountInt;
          break;
        case CountOneofCase.CountFloat:
          CountFloat = other.CountFloat;
          break;
      }

      switch (other.ZeroCountCase) {
        case ZeroCountOneofCase.ZeroCountInt:
          ZeroCountInt = other.ZeroCountInt;
          break;
        case ZeroCountOneofCase.ZeroCountFloat:
          ZeroCountFloat = other.ZeroCountFloat;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Histogram Clone() {
      return new Histogram(this);
    }

    /// <summary>Field number for the "count_int" field.</summary>
    public const int CountIntFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CountInt {
      get { return countCase_ == CountOneofCase.CountInt ? (ulong) count_ : 0UL; }
      set {
        count_ = value;
        countCase_ = CountOneofCase.CountInt;
      }
    }

    /// <summary>Field number for the "count_float" field.</summary>
    public const int CountFloatFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CountFloat {
      get { return countCase_ == CountOneofCase.CountFloat ? (double) count_ : 0D; }
      set {
        count_ = value;
        countCase_ = CountOneofCase.CountFloat;
      }
    }

    /// <summary>Field number for the "sum" field.</summary>
    public const int SumFieldNumber = 3;
    private double sum_;
    /// <summary>
    /// Sum of observations in the histogram.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Sum {
      get { return sum_; }
      set {
        sum_ = value;
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 4;
    private int schema_;
    /// <summary>
    /// The schema defines the bucket schema. Currently, valid numbers
    /// are -4 &lt;= n &lt;= 8. They are all for base-2 bucket schemas, where 1
    /// is a bucket boundary in each case, and then each power of two is
    /// divided into 2^n logarithmic buckets. Or in other words, each
    /// bucket boundary is the previous boundary times 2^(2^-n). In the
    /// future, more bucket schemas may be added using numbers &lt; -4 or >
    /// 8.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "zero_threshold" field.</summary>
    public const int ZeroThresholdFieldNumber = 5;
    private double zeroThreshold_;
    /// <summary>
    /// Breadth of the zero bucket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ZeroThreshold {
      get { return zeroThreshold_; }
      set {
        zeroThreshold_ = value;
      }
    }

    /// <summary>Field number for the "zero_count_int" field.</summary>
    public const int ZeroCountIntFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ZeroCountInt {
      get { return zeroCountCase_ == ZeroCountOneofCase.ZeroCountInt ? (ulong) zeroCount_ : 0UL; }
      set {
        zeroCount_ = value;
        zeroCountCase_ = ZeroCountOneofCase.ZeroCountInt;
      }
    }

    /// <summary>Field number for the "zero_count_float" field.</summary>
    public const int ZeroCountFloatFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ZeroCountFloat {
      get { return zeroCountCase_ == ZeroCountOneofCase.ZeroCountFloat ? (double) zeroCount_ : 0D; }
      set {
        zeroCount_ = value;
        zeroCountCase_ = ZeroCountOneofCase.ZeroCountFloat;
      }
    }

    /// <summary>Field number for the "negative_spans" field.</summary>
    public const int NegativeSpansFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Prometheus.BucketSpan> _repeated_negativeSpans_codec
        = pb::FieldCodec.ForMessage(66, global::Prometheus.BucketSpan.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.BucketSpan> negativeSpans_ = new pbc::RepeatedField<global::Prometheus.BucketSpan>();
    /// <summary>
    /// Negative Buckets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.BucketSpan> NegativeSpans {
      get { return negativeSpans_; }
    }

    /// <summary>Field number for the "negative_deltas" field.</summary>
    public const int NegativeDeltasFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_negativeDeltas_codec
        = pb::FieldCodec.ForSInt64(74);
    private readonly pbc::RepeatedField<long> negativeDeltas_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Use either "negative_deltas" or "negative_counts", the former for
    /// regular histograms with integer counts, the latter for float
    /// histograms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> NegativeDeltas {
      get { return negativeDeltas_; }
    }

    /// <summary>Field number for the "negative_counts" field.</summary>
    public const int NegativeCountsFieldNumber = 10;
    private static readonly pb::FieldCodec<double> _repeated_negativeCounts_codec
        = pb::FieldCodec.ForDouble(82);
    private readonly pbc::RepeatedField<double> negativeCounts_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Absolute count of each bucket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> NegativeCounts {
      get { return negativeCounts_; }
    }

    /// <summary>Field number for the "positive_spans" field.</summary>
    public const int PositiveSpansFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Prometheus.BucketSpan> _repeated_positiveSpans_codec
        = pb::FieldCodec.ForMessage(90, global::Prometheus.BucketSpan.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.BucketSpan> positiveSpans_ = new pbc::RepeatedField<global::Prometheus.BucketSpan>();
    /// <summary>
    /// Positive Buckets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.BucketSpan> PositiveSpans {
      get { return positiveSpans_; }
    }

    /// <summary>Field number for the "positive_deltas" field.</summary>
    public const int PositiveDeltasFieldNumber = 12;
    private static readonly pb::FieldCodec<long> _repeated_positiveDeltas_codec
        = pb::FieldCodec.ForSInt64(98);
    private readonly pbc::RepeatedField<long> positiveDeltas_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Use either "positive_deltas" or "positive_counts", the former for
    /// regular histograms with integer counts, the latter for float
    /// histograms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> PositiveDeltas {
      get { return positiveDeltas_; }
    }

    /// <summary>Field number for the "positive_counts" field.</summary>
    public const int PositiveCountsFieldNumber = 13;
    private static readonly pb::FieldCodec<double> _repeated_positiveCounts_codec
        = pb::FieldCodec.ForDouble(106);
    private readonly pbc::RepeatedField<double> positiveCounts_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Absolute count of each bucket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> PositiveCounts {
      get { return positiveCounts_; }
    }

    /// <summary>Field number for the "reset_hint" field.</summary>
    public const int ResetHintFieldNumber = 14;
    private global::Prometheus.Histogram.Types.ResetHint resetHint_ = global::Prometheus.Histogram.Types.ResetHint.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Prometheus.Histogram.Types.ResetHint ResetHint {
      get { return resetHint_; }
      set {
        resetHint_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 15;
    private long timestamp_;
    /// <summary>
    /// timestamp is in ms format, see model/timestamp/timestamp.go for
    /// conversion from time.Time to Prometheus timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    private object count_;
    /// <summary>Enum of possible cases for the "count" oneof.</summary>
    public enum CountOneofCase {
      None = 0,
      CountInt = 1,
      CountFloat = 2,
    }
    private CountOneofCase countCase_ = CountOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CountOneofCase CountCase {
      get { return countCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      countCase_ = CountOneofCase.None;
      count_ = null;
    }

    private object zeroCount_;
    /// <summary>Enum of possible cases for the "zero_count" oneof.</summary>
    public enum ZeroCountOneofCase {
      None = 0,
      ZeroCountInt = 6,
      ZeroCountFloat = 7,
    }
    private ZeroCountOneofCase zeroCountCase_ = ZeroCountOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ZeroCountOneofCase ZeroCountCase {
      get { return zeroCountCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZeroCount() {
      zeroCountCase_ = ZeroCountOneofCase.None;
      zeroCount_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Histogram);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Histogram other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CountInt != other.CountInt) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CountFloat, other.CountFloat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Sum, other.Sum)) return false;
      if (Schema != other.Schema) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ZeroThreshold, other.ZeroThreshold)) return false;
      if (ZeroCountInt != other.ZeroCountInt) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ZeroCountFloat, other.ZeroCountFloat)) return false;
      if(!negativeSpans_.Equals(other.negativeSpans_)) return false;
      if(!negativeDeltas_.Equals(other.negativeDeltas_)) return false;
      if(!negativeCounts_.Equals(other.negativeCounts_)) return false;
      if(!positiveSpans_.Equals(other.positiveSpans_)) return false;
      if(!positiveDeltas_.Equals(other.positiveDeltas_)) return false;
      if(!positiveCounts_.Equals(other.positiveCounts_)) return false;
      if (ResetHint != other.ResetHint) return false;
      if (Timestamp != other.Timestamp) return false;
      if (CountCase != other.CountCase) return false;
      if (ZeroCountCase != other.ZeroCountCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (countCase_ == CountOneofCase.CountInt) hash ^= CountInt.GetHashCode();
      if (countCase_ == CountOneofCase.CountFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CountFloat);
      if (Sum != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Sum);
      if (Schema != 0) hash ^= Schema.GetHashCode();
      if (ZeroThreshold != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ZeroThreshold);
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountInt) hash ^= ZeroCountInt.GetHashCode();
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ZeroCountFloat);
      hash ^= negativeSpans_.GetHashCode();
      hash ^= negativeDeltas_.GetHashCode();
      hash ^= negativeCounts_.GetHashCode();
      hash ^= positiveSpans_.GetHashCode();
      hash ^= positiveDeltas_.GetHashCode();
      hash ^= positiveCounts_.GetHashCode();
      if (ResetHint != global::Prometheus.Histogram.Types.ResetHint.Unknown) hash ^= ResetHint.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      hash ^= (int) countCase_;
      hash ^= (int) zeroCountCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (countCase_ == CountOneofCase.CountInt) {
        output.WriteRawTag(8);
        output.WriteUInt64(CountInt);
      }
      if (countCase_ == CountOneofCase.CountFloat) {
        output.WriteRawTag(17);
        output.WriteDouble(CountFloat);
      }
      if (Sum != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Sum);
      }
      if (Schema != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Schema);
      }
      if (ZeroThreshold != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ZeroThreshold);
      }
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountInt) {
        output.WriteRawTag(48);
        output.WriteUInt64(ZeroCountInt);
      }
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountFloat) {
        output.WriteRawTag(57);
        output.WriteDouble(ZeroCountFloat);
      }
      negativeSpans_.WriteTo(output, _repeated_negativeSpans_codec);
      negativeDeltas_.WriteTo(output, _repeated_negativeDeltas_codec);
      negativeCounts_.WriteTo(output, _repeated_negativeCounts_codec);
      positiveSpans_.WriteTo(output, _repeated_positiveSpans_codec);
      positiveDeltas_.WriteTo(output, _repeated_positiveDeltas_codec);
      positiveCounts_.WriteTo(output, _repeated_positiveCounts_codec);
      if (ResetHint != global::Prometheus.Histogram.Types.ResetHint.Unknown) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ResetHint);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (countCase_ == CountOneofCase.CountInt) {
        output.WriteRawTag(8);
        output.WriteUInt64(CountInt);
      }
      if (countCase_ == CountOneofCase.CountFloat) {
        output.WriteRawTag(17);
        output.WriteDouble(CountFloat);
      }
      if (Sum != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Sum);
      }
      if (Schema != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Schema);
      }
      if (ZeroThreshold != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ZeroThreshold);
      }
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountInt) {
        output.WriteRawTag(48);
        output.WriteUInt64(ZeroCountInt);
      }
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountFloat) {
        output.WriteRawTag(57);
        output.WriteDouble(ZeroCountFloat);
      }
      negativeSpans_.WriteTo(ref output, _repeated_negativeSpans_codec);
      negativeDeltas_.WriteTo(ref output, _repeated_negativeDeltas_codec);
      negativeCounts_.WriteTo(ref output, _repeated_negativeCounts_codec);
      positiveSpans_.WriteTo(ref output, _repeated_positiveSpans_codec);
      positiveDeltas_.WriteTo(ref output, _repeated_positiveDeltas_codec);
      positiveCounts_.WriteTo(ref output, _repeated_positiveCounts_codec);
      if (ResetHint != global::Prometheus.Histogram.Types.ResetHint.Unknown) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ResetHint);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (countCase_ == CountOneofCase.CountInt) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CountInt);
      }
      if (countCase_ == CountOneofCase.CountFloat) {
        size += 1 + 8;
      }
      if (Sum != 0D) {
        size += 1 + 8;
      }
      if (Schema != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Schema);
      }
      if (ZeroThreshold != 0D) {
        size += 1 + 8;
      }
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountInt) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ZeroCountInt);
      }
      if (zeroCountCase_ == ZeroCountOneofCase.ZeroCountFloat) {
        size += 1 + 8;
      }
      size += negativeSpans_.CalculateSize(_repeated_negativeSpans_codec);
      size += negativeDeltas_.CalculateSize(_repeated_negativeDeltas_codec);
      size += negativeCounts_.CalculateSize(_repeated_negativeCounts_codec);
      size += positiveSpans_.CalculateSize(_repeated_positiveSpans_codec);
      size += positiveDeltas_.CalculateSize(_repeated_positiveDeltas_codec);
      size += positiveCounts_.CalculateSize(_repeated_positiveCounts_codec);
      if (ResetHint != global::Prometheus.Histogram.Types.ResetHint.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResetHint);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Histogram other) {
      if (other == null) {
        return;
      }
      if (other.Sum != 0D) {
        Sum = other.Sum;
      }
      if (other.Schema != 0) {
        Schema = other.Schema;
      }
      if (other.ZeroThreshold != 0D) {
        ZeroThreshold = other.ZeroThreshold;
      }
      negativeSpans_.Add(other.negativeSpans_);
      negativeDeltas_.Add(other.negativeDeltas_);
      negativeCounts_.Add(other.negativeCounts_);
      positiveSpans_.Add(other.positiveSpans_);
      positiveDeltas_.Add(other.positiveDeltas_);
      positiveCounts_.Add(other.positiveCounts_);
      if (other.ResetHint != global::Prometheus.Histogram.Types.ResetHint.Unknown) {
        ResetHint = other.ResetHint;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      switch (other.CountCase) {
        case CountOneofCase.CountInt:
          CountInt = other.CountInt;
          break;
        case CountOneofCase.CountFloat:
          CountFloat = other.CountFloat;
          break;
      }

      switch (other.ZeroCountCase) {
        case ZeroCountOneofCase.ZeroCountInt:
          ZeroCountInt = other.ZeroCountInt;
          break;
        case ZeroCountOneofCase.ZeroCountFloat:
          ZeroCountFloat = other.ZeroCountFloat;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CountInt = input.ReadUInt64();
            break;
          }
          case 17: {
            CountFloat = input.ReadDouble();
            break;
          }
          case 25: {
            Sum = input.ReadDouble();
            break;
          }
          case 32: {
            Schema = input.ReadSInt32();
            break;
          }
          case 41: {
            ZeroThreshold = input.ReadDouble();
            break;
          }
          case 48: {
            ZeroCountInt = input.ReadUInt64();
            break;
          }
          case 57: {
            ZeroCountFloat = input.ReadDouble();
            break;
          }
          case 66: {
            negativeSpans_.AddEntriesFrom(input, _repeated_negativeSpans_codec);
            break;
          }
          case 74:
          case 72: {
            negativeDeltas_.AddEntriesFrom(input, _repeated_negativeDeltas_codec);
            break;
          }
          case 82:
          case 81: {
            negativeCounts_.AddEntriesFrom(input, _repeated_negativeCounts_codec);
            break;
          }
          case 90: {
            positiveSpans_.AddEntriesFrom(input, _repeated_positiveSpans_codec);
            break;
          }
          case 98:
          case 96: {
            positiveDeltas_.AddEntriesFrom(input, _repeated_positiveDeltas_codec);
            break;
          }
          case 106:
          case 105: {
            positiveCounts_.AddEntriesFrom(input, _repeated_positiveCounts_codec);
            break;
          }
          case 112: {
            ResetHint = (global::Prometheus.Histogram.Types.ResetHint) input.ReadEnum();
            break;
          }
          case 120: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CountInt = input.ReadUInt64();
            break;
          }
          case 17: {
            CountFloat = input.ReadDouble();
            break;
          }
          case 25: {
            Sum = input.ReadDouble();
            break;
          }
          case 32: {
            Schema = input.ReadSInt32();
            break;
          }
          case 41: {
            ZeroThreshold = input.ReadDouble();
            break;
          }
          case 48: {
            ZeroCountInt = input.ReadUInt64();
            break;
          }
          case 57: {
            ZeroCountFloat = input.ReadDouble();
            break;
          }
          case 66: {
            negativeSpans_.AddEntriesFrom(ref input, _repeated_negativeSpans_codec);
            break;
          }
          case 74:
          case 72: {
            negativeDeltas_.AddEntriesFrom(ref input, _repeated_negativeDeltas_codec);
            break;
          }
          case 82:
          case 81: {
            negativeCounts_.AddEntriesFrom(ref input, _repeated_negativeCounts_codec);
            break;
          }
          case 90: {
            positiveSpans_.AddEntriesFrom(ref input, _repeated_positiveSpans_codec);
            break;
          }
          case 98:
          case 96: {
            positiveDeltas_.AddEntriesFrom(ref input, _repeated_positiveDeltas_codec);
            break;
          }
          case 106:
          case 105: {
            positiveCounts_.AddEntriesFrom(ref input, _repeated_positiveCounts_codec);
            break;
          }
          case 112: {
            ResetHint = (global::Prometheus.Histogram.Types.ResetHint) input.ReadEnum();
            break;
          }
          case 120: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Histogram message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResetHint {
        /// <summary>
        /// Need to test for a counter reset explicitly.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// This is the 1st histogram after a counter reset.
        /// </summary>
        [pbr::OriginalName("YES")] Yes = 1,
        /// <summary>
        /// There was no counter reset between this and the previous Histogram.
        /// </summary>
        [pbr::OriginalName("NO")] No = 2,
        /// <summary>
        /// This is a gauge histogram where counter resets don't happen.
        /// </summary>
        [pbr::OriginalName("GAUGE")] Gauge = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// A BucketSpan defines a number of consecutive buckets with their
  /// offset. Logically, it would be more straightforward to include the
  /// bucket counts in the Span. However, the protobuf representation is
  /// more compact in the way the data is structured here (with all the
  /// buckets in a single array separate from the Spans).
  /// </summary>
  public sealed partial class BucketSpan : pb::IMessage<BucketSpan>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BucketSpan> _parser = new pb::MessageParser<BucketSpan>(() => new BucketSpan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BucketSpan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BucketSpan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BucketSpan(BucketSpan other) : this() {
      offset_ = other.offset_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BucketSpan Clone() {
      return new BucketSpan(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    /// <summary>
    /// Gap to previous span, or starting point for 1st span (which can be negative).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private uint length_;
    /// <summary>
    /// Length of consecutive buckets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BucketSpan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BucketSpan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Offset);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Offset);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Offset);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BucketSpan other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadSInt32();
            break;
          }
          case 16: {
            Length = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Offset = input.ReadSInt32();
            break;
          }
          case 16: {
            Length = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TimeSeries represents samples and labels for a single time series.
  /// </summary>
  public sealed partial class TimeSeries : pb::IMessage<TimeSeries>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeSeries> _parser = new pb::MessageParser<TimeSeries>(() => new TimeSeries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TimeSeries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeSeries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeSeries(TimeSeries other) : this() {
      labels_ = other.labels_.Clone();
      samples_ = other.samples_.Clone();
      exemplars_ = other.exemplars_.Clone();
      histograms_ = other.histograms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeSeries Clone() {
      return new TimeSeries(this);
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Prometheus.Label> _repeated_labels_codec
        = pb::FieldCodec.ForMessage(10, global::Prometheus.Label.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Label> labels_ = new pbc::RepeatedField<global::Prometheus.Label>();
    /// <summary>
    /// For a timeseries to be valid, and for the samples and exemplars
    /// to be ingested by the remote system properly, the labels field is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Label> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "samples" field.</summary>
    public const int SamplesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Prometheus.Sample> _repeated_samples_codec
        = pb::FieldCodec.ForMessage(18, global::Prometheus.Sample.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Sample> samples_ = new pbc::RepeatedField<global::Prometheus.Sample>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Sample> Samples {
      get { return samples_; }
    }

    /// <summary>Field number for the "exemplars" field.</summary>
    public const int ExemplarsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Prometheus.Exemplar> _repeated_exemplars_codec
        = pb::FieldCodec.ForMessage(26, global::Prometheus.Exemplar.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Exemplar> exemplars_ = new pbc::RepeatedField<global::Prometheus.Exemplar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Exemplar> Exemplars {
      get { return exemplars_; }
    }

    /// <summary>Field number for the "histograms" field.</summary>
    public const int HistogramsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Prometheus.Histogram> _repeated_histograms_codec
        = pb::FieldCodec.ForMessage(34, global::Prometheus.Histogram.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Histogram> histograms_ = new pbc::RepeatedField<global::Prometheus.Histogram>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Histogram> Histograms {
      get { return histograms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TimeSeries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TimeSeries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!labels_.Equals(other.labels_)) return false;
      if(!samples_.Equals(other.samples_)) return false;
      if(!exemplars_.Equals(other.exemplars_)) return false;
      if(!histograms_.Equals(other.histograms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= labels_.GetHashCode();
      hash ^= samples_.GetHashCode();
      hash ^= exemplars_.GetHashCode();
      hash ^= histograms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      labels_.WriteTo(output, _repeated_labels_codec);
      samples_.WriteTo(output, _repeated_samples_codec);
      exemplars_.WriteTo(output, _repeated_exemplars_codec);
      histograms_.WriteTo(output, _repeated_histograms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      labels_.WriteTo(ref output, _repeated_labels_codec);
      samples_.WriteTo(ref output, _repeated_samples_codec);
      exemplars_.WriteTo(ref output, _repeated_exemplars_codec);
      histograms_.WriteTo(ref output, _repeated_histograms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += labels_.CalculateSize(_repeated_labels_codec);
      size += samples_.CalculateSize(_repeated_samples_codec);
      size += exemplars_.CalculateSize(_repeated_exemplars_codec);
      size += histograms_.CalculateSize(_repeated_histograms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TimeSeries other) {
      if (other == null) {
        return;
      }
      labels_.Add(other.labels_);
      samples_.Add(other.samples_);
      exemplars_.Add(other.exemplars_);
      histograms_.Add(other.histograms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
          case 18: {
            samples_.AddEntriesFrom(input, _repeated_samples_codec);
            break;
          }
          case 26: {
            exemplars_.AddEntriesFrom(input, _repeated_exemplars_codec);
            break;
          }
          case 34: {
            histograms_.AddEntriesFrom(input, _repeated_histograms_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
          case 18: {
            samples_.AddEntriesFrom(ref input, _repeated_samples_codec);
            break;
          }
          case 26: {
            exemplars_.AddEntriesFrom(ref input, _repeated_exemplars_codec);
            break;
          }
          case 34: {
            histograms_.AddEntriesFrom(ref input, _repeated_histograms_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Label : pb::IMessage<Label>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Label> _parser = new pb::MessageParser<Label>(() => new Label());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Label> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Label() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Label(Label other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Label Clone() {
      return new Label(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Label);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Label other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Label other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Labels : pb::IMessage<Labels>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Labels> _parser = new pb::MessageParser<Labels>(() => new Labels());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Labels> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Labels() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Labels(Labels other) : this() {
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Labels Clone() {
      return new Labels(this);
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int Labels_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Prometheus.Label> _repeated_labels_codec
        = pb::FieldCodec.ForMessage(10, global::Prometheus.Label.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Label> labels_ = new pbc::RepeatedField<global::Prometheus.Label>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Label> Labels_ {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Labels);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Labels other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!labels_.Equals(other.labels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= labels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      labels_.WriteTo(output, _repeated_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      labels_.WriteTo(ref output, _repeated_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += labels_.CalculateSize(_repeated_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Labels other) {
      if (other == null) {
        return;
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Matcher specifies a rule, which can match or set of labels or not.
  /// </summary>
  public sealed partial class LabelMatcher : pb::IMessage<LabelMatcher>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelMatcher> _parser = new pb::MessageParser<LabelMatcher>(() => new LabelMatcher());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LabelMatcher> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LabelMatcher() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LabelMatcher(LabelMatcher other) : this() {
      type_ = other.type_;
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LabelMatcher Clone() {
      return new LabelMatcher(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Prometheus.LabelMatcher.Types.Type type_ = global::Prometheus.LabelMatcher.Types.Type.Eq;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Prometheus.LabelMatcher.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LabelMatcher);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LabelMatcher other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Prometheus.LabelMatcher.Types.Type.Eq) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Prometheus.LabelMatcher.Types.Type.Eq) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Prometheus.LabelMatcher.Types.Type.Eq) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Prometheus.LabelMatcher.Types.Type.Eq) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LabelMatcher other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Prometheus.LabelMatcher.Types.Type.Eq) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Prometheus.LabelMatcher.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Prometheus.LabelMatcher.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LabelMatcher message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("EQ")] Eq = 0,
        [pbr::OriginalName("NEQ")] Neq = 1,
        [pbr::OriginalName("RE")] Re = 2,
        [pbr::OriginalName("NRE")] Nre = 3,
      }

    }
    #endregion

  }

  public sealed partial class ReadHints : pb::IMessage<ReadHints>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadHints> _parser = new pb::MessageParser<ReadHints>(() => new ReadHints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReadHints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadHints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadHints(ReadHints other) : this() {
      stepMs_ = other.stepMs_;
      func_ = other.func_;
      startMs_ = other.startMs_;
      endMs_ = other.endMs_;
      grouping_ = other.grouping_.Clone();
      by_ = other.by_;
      rangeMs_ = other.rangeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadHints Clone() {
      return new ReadHints(this);
    }

    /// <summary>Field number for the "step_ms" field.</summary>
    public const int StepMsFieldNumber = 1;
    private long stepMs_;
    /// <summary>
    /// Query step size in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StepMs {
      get { return stepMs_; }
      set {
        stepMs_ = value;
      }
    }

    /// <summary>Field number for the "func" field.</summary>
    public const int FuncFieldNumber = 2;
    private string func_ = "";
    /// <summary>
    /// String representation of surrounding function or aggregation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Func {
      get { return func_; }
      set {
        func_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_ms" field.</summary>
    public const int StartMsFieldNumber = 3;
    private long startMs_;
    /// <summary>
    /// Start time in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartMs {
      get { return startMs_; }
      set {
        startMs_ = value;
      }
    }

    /// <summary>Field number for the "end_ms" field.</summary>
    public const int EndMsFieldNumber = 4;
    private long endMs_;
    /// <summary>
    /// End time in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndMs {
      get { return endMs_; }
      set {
        endMs_ = value;
      }
    }

    /// <summary>Field number for the "grouping" field.</summary>
    public const int GroupingFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_grouping_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> grouping_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of label names used in aggregation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Grouping {
      get { return grouping_; }
    }

    /// <summary>Field number for the "by" field.</summary>
    public const int ByFieldNumber = 6;
    private bool by_;
    /// <summary>
    /// Indicate whether it is without or by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool By {
      get { return by_; }
      set {
        by_ = value;
      }
    }

    /// <summary>Field number for the "range_ms" field.</summary>
    public const int RangeMsFieldNumber = 7;
    private long rangeMs_;
    /// <summary>
    /// Range vector selector range in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RangeMs {
      get { return rangeMs_; }
      set {
        rangeMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReadHints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReadHints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StepMs != other.StepMs) return false;
      if (Func != other.Func) return false;
      if (StartMs != other.StartMs) return false;
      if (EndMs != other.EndMs) return false;
      if(!grouping_.Equals(other.grouping_)) return false;
      if (By != other.By) return false;
      if (RangeMs != other.RangeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StepMs != 0L) hash ^= StepMs.GetHashCode();
      if (Func.Length != 0) hash ^= Func.GetHashCode();
      if (StartMs != 0L) hash ^= StartMs.GetHashCode();
      if (EndMs != 0L) hash ^= EndMs.GetHashCode();
      hash ^= grouping_.GetHashCode();
      if (By != false) hash ^= By.GetHashCode();
      if (RangeMs != 0L) hash ^= RangeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StepMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StepMs);
      }
      if (Func.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Func);
      }
      if (StartMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartMs);
      }
      if (EndMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndMs);
      }
      grouping_.WriteTo(output, _repeated_grouping_codec);
      if (By != false) {
        output.WriteRawTag(48);
        output.WriteBool(By);
      }
      if (RangeMs != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RangeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StepMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StepMs);
      }
      if (Func.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Func);
      }
      if (StartMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartMs);
      }
      if (EndMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndMs);
      }
      grouping_.WriteTo(ref output, _repeated_grouping_codec);
      if (By != false) {
        output.WriteRawTag(48);
        output.WriteBool(By);
      }
      if (RangeMs != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RangeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StepMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StepMs);
      }
      if (Func.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Func);
      }
      if (StartMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartMs);
      }
      if (EndMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndMs);
      }
      size += grouping_.CalculateSize(_repeated_grouping_codec);
      if (By != false) {
        size += 1 + 1;
      }
      if (RangeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RangeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReadHints other) {
      if (other == null) {
        return;
      }
      if (other.StepMs != 0L) {
        StepMs = other.StepMs;
      }
      if (other.Func.Length != 0) {
        Func = other.Func;
      }
      if (other.StartMs != 0L) {
        StartMs = other.StartMs;
      }
      if (other.EndMs != 0L) {
        EndMs = other.EndMs;
      }
      grouping_.Add(other.grouping_);
      if (other.By != false) {
        By = other.By;
      }
      if (other.RangeMs != 0L) {
        RangeMs = other.RangeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StepMs = input.ReadInt64();
            break;
          }
          case 18: {
            Func = input.ReadString();
            break;
          }
          case 24: {
            StartMs = input.ReadInt64();
            break;
          }
          case 32: {
            EndMs = input.ReadInt64();
            break;
          }
          case 42: {
            grouping_.AddEntriesFrom(input, _repeated_grouping_codec);
            break;
          }
          case 48: {
            By = input.ReadBool();
            break;
          }
          case 56: {
            RangeMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StepMs = input.ReadInt64();
            break;
          }
          case 18: {
            Func = input.ReadString();
            break;
          }
          case 24: {
            StartMs = input.ReadInt64();
            break;
          }
          case 32: {
            EndMs = input.ReadInt64();
            break;
          }
          case 42: {
            grouping_.AddEntriesFrom(ref input, _repeated_grouping_codec);
            break;
          }
          case 48: {
            By = input.ReadBool();
            break;
          }
          case 56: {
            RangeMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Chunk represents a TSDB chunk.
  /// Time range [min, max] is inclusive.
  /// </summary>
  public sealed partial class Chunk : pb::IMessage<Chunk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Chunk> _parser = new pb::MessageParser<Chunk>(() => new Chunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Chunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Chunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Chunk(Chunk other) : this() {
      minTimeMs_ = other.minTimeMs_;
      maxTimeMs_ = other.maxTimeMs_;
      type_ = other.type_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Chunk Clone() {
      return new Chunk(this);
    }

    /// <summary>Field number for the "min_time_ms" field.</summary>
    public const int MinTimeMsFieldNumber = 1;
    private long minTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinTimeMs {
      get { return minTimeMs_; }
      set {
        minTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "max_time_ms" field.</summary>
    public const int MaxTimeMsFieldNumber = 2;
    private long maxTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxTimeMs {
      get { return maxTimeMs_; }
      set {
        maxTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Prometheus.Chunk.Types.Encoding type_ = global::Prometheus.Chunk.Types.Encoding.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Prometheus.Chunk.Types.Encoding Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Chunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Chunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinTimeMs != other.MinTimeMs) return false;
      if (MaxTimeMs != other.MaxTimeMs) return false;
      if (Type != other.Type) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MinTimeMs != 0L) hash ^= MinTimeMs.GetHashCode();
      if (MaxTimeMs != 0L) hash ^= MaxTimeMs.GetHashCode();
      if (Type != global::Prometheus.Chunk.Types.Encoding.Unknown) hash ^= Type.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MinTimeMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MinTimeMs);
      }
      if (MaxTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxTimeMs);
      }
      if (Type != global::Prometheus.Chunk.Types.Encoding.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MinTimeMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MinTimeMs);
      }
      if (MaxTimeMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxTimeMs);
      }
      if (Type != global::Prometheus.Chunk.Types.Encoding.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MinTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinTimeMs);
      }
      if (MaxTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxTimeMs);
      }
      if (Type != global::Prometheus.Chunk.Types.Encoding.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Chunk other) {
      if (other == null) {
        return;
      }
      if (other.MinTimeMs != 0L) {
        MinTimeMs = other.MinTimeMs;
      }
      if (other.MaxTimeMs != 0L) {
        MaxTimeMs = other.MaxTimeMs;
      }
      if (other.Type != global::Prometheus.Chunk.Types.Encoding.Unknown) {
        Type = other.Type;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinTimeMs = input.ReadInt64();
            break;
          }
          case 16: {
            MaxTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            Type = (global::Prometheus.Chunk.Types.Encoding) input.ReadEnum();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinTimeMs = input.ReadInt64();
            break;
          }
          case 16: {
            MaxTimeMs = input.ReadInt64();
            break;
          }
          case 24: {
            Type = (global::Prometheus.Chunk.Types.Encoding) input.ReadEnum();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Chunk message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// We require this to match chunkenc.Encoding.
      /// </summary>
      public enum Encoding {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("XOR")] Xor = 1,
        [pbr::OriginalName("HISTOGRAM")] Histogram = 2,
        [pbr::OriginalName("FLOAT_HISTOGRAM")] FloatHistogram = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// ChunkedSeries represents single, encoded time series.
  /// </summary>
  public sealed partial class ChunkedSeries : pb::IMessage<ChunkedSeries>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChunkedSeries> _parser = new pb::MessageParser<ChunkedSeries>(() => new ChunkedSeries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChunkedSeries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Prometheus.TypesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChunkedSeries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChunkedSeries(ChunkedSeries other) : this() {
      labels_ = other.labels_.Clone();
      chunks_ = other.chunks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChunkedSeries Clone() {
      return new ChunkedSeries(this);
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Prometheus.Label> _repeated_labels_codec
        = pb::FieldCodec.ForMessage(10, global::Prometheus.Label.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Label> labels_ = new pbc::RepeatedField<global::Prometheus.Label>();
    /// <summary>
    /// Labels should be sorted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Label> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Prometheus.Chunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(18, global::Prometheus.Chunk.Parser);
    private readonly pbc::RepeatedField<global::Prometheus.Chunk> chunks_ = new pbc::RepeatedField<global::Prometheus.Chunk>();
    /// <summary>
    /// Chunks will be in start time order and may overlap.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Prometheus.Chunk> Chunks {
      get { return chunks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChunkedSeries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChunkedSeries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!labels_.Equals(other.labels_)) return false;
      if(!chunks_.Equals(other.chunks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= labels_.GetHashCode();
      hash ^= chunks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      labels_.WriteTo(output, _repeated_labels_codec);
      chunks_.WriteTo(output, _repeated_chunks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      labels_.WriteTo(ref output, _repeated_labels_codec);
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += labels_.CalculateSize(_repeated_labels_codec);
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChunkedSeries other) {
      if (other == null) {
        return;
      }
      labels_.Add(other.labels_);
      chunks_.Add(other.chunks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
          case 18: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
          case 18: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
